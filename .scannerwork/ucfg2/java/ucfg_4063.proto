
Pnet.sourceforge.docfetcher.util.collect.ListMap#removeValue(Ljava/lang/Object;)ZX
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaá á("startingBlock*í
2X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaé é(≠™
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaé é(

%7void"java.util.Iterator#remove()V*

itjava.util.Iterator2remove()*
4*∆
3X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaå å(ÎË
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaå å( ;
%45net.sourceforge.docfetcher.util.collect.ListMap$Entry"+java.util.Iterator#next()Ljava/lang/Object;*

itjava.util.Iterator2next()‚
ﬂ
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaå å(!>
entry5net.sourceforge.docfetcher.util.collect.ListMap$Entry"__id*=
;
%45net.sourceforge.docfetcher.util.collect.ListMap$Entryπ
∂
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaç ç(
%5V"__id*K*I
>
entry5net.sourceforge.docfetcher.util.collect.ListMap$Entry"
valueœÃ
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaç ç( 
%6boolean",java.lang.Object#equals(Ljava/lang/Object;)Z*	

%5V*


valueV2equals(Ljava/lang/Object;)*
2
4*ß
startingBlockX
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaá á(-∂
≥
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaá á($
%8"
__annotate*75
3net.sourceforge.docfetcher.util.annotations.NotNull*


valueV~
|
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaá' á(,

valueV"__annotation*

%8*
5*ö
4X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaã	 ã(≤Ø
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaã	 ã(
%3boolean"java.util.Iterator#hasNext()Z*

itjava.util.Iterator2	hasNext()*
3
1*Ä
5X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaà à(˜
Ù
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaà à(
%0V"Wnet.sourceforge.docfetcher.util.Util#checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;*("&
$net.sourceforge.docfetcher.util.Util*


valueV∏
µ
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaâ â(!
%1java.util.List"__id*=*;1
/net.sourceforge.docfetcher.util.collect.ListMap"
list «
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaâ â(,
%2java.util.Iterator"-java.util.List#iterator()Ljava/util/Iterator;*

%1java.util.List2
iterator()ô
ñ
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaâ â(-
itjava.util.Iterator"__id*

%2java.util.Iterator*
4*¡
1X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaí	 í("b
X
LD:/git_project/code/src/net/sourceforge/docfetcher/util/collect/ListMap.javaí í(
"":

valueVB31
/net.sourceforge.docfetcher.util.collect.ListMap